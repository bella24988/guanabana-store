package azienda;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.IOException;

import modello.Ordine;

public class SpedizioneController implements ActionListener{
	
	private Ordine[] ordini;
	private SistemaGestioneFinestra sistemaGestioneFinestra;
	private SpedizionePanel spedizionePanel;
	
	

	public SpedizioneController(SistemaGestioneFinestra sistemaGestioneFinestra) {
		super();
		this.sistemaGestioneFinestra = sistemaGestioneFinestra;
	}



	@Override
	public void actionPerformed(ActionEvent e) {
		if (e.getActionCommand().compareTo("Spedizione")==0) {
			refreshOrdini();
		}else if (e.getActionCommand().compareTo("Sped")==0) {
			ClientAzienda servizioClient = new ClientAzienda();
			int indiceArray = Integer.parseInt(e.getActionCommand().substring(4));
			Ordine ordine = spedizionePanel.getOrdini()[indiceArray];
			ClientAzienda servizioClientAzienda = new ClientAzienda();
			try {
				servizioClientAzienda.aggiornaStatoOrdine("SPEDITO", ordine.getNumeroOrdine());
			} catch (IOException e1) {
				// TODO Auto-generated catch block
				e1.printStackTrace();
			}	
			refreshOrdini();
		}
		
	}
	
	public void refreshOrdini() {
		sistemaGestioneFinestra.pulisceSchermo();
		setOrdini(sistemaGestioneFinestra.enlistaOrdini("PRONTO PER LA SPEDIZIONE"));
		spedizionePanel = new SpedizionePanel(ordini, this);
		if(getOrdini()!=null){
		sistemaGestioneFinestra.getContenutoPanel().add(spedizionePanel);
		spedizionePanel.setVisible(true);
		}else{
			spedizionePanel.setVisible(false);
			sistemaGestioneFinestra.setTxtErrore("Non ci sono ordini da spedire");
			sistemaGestioneFinestra.getContenutoPanel().removeAll();
		}
		sistemaGestioneFinestra.Refresh();
	}



	public Ordine[] getOrdini() {
		return ordini;
	}



	public void setOrdini(Ordine[] ordini) {
		this.ordini = ordini;
	}



	public SpedizionePanel getSpedizionePanel() {
		return spedizionePanel;
	}



	public void setSpedizionePanel(SpedizionePanel spedizionePanel) {
		this.spedizionePanel = spedizionePanel;
	}
	
	

}
